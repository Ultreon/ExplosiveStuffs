plugins {
    id "dev.architectury.loom" version "1.4-SNAPSHOT" apply false
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "maven-publish"
    id "java"
    id "java-library"
}

apply plugin: "dev.architectury.loom"

architectury {
    minecraft = rootProject.minecraft_version

    forge()
}

version = mod_version

base.archivesName = rootProject.archives_base_name


loom {
    silentMojangMappingsLicense()

    forge {
        mixinConfigs "explosivestuffs.mixins.json"
    }
}
architectury {
    platformSetupLoomIde()
    forge()
}

repositories {

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html#sub:flat_dir_resolver
    // flatDir {
    //     dir 'libs'
    // }

    mavenCentral()
    maven {
        name 'Curios maven'
        url = "https://maven.theillusivec4.top/"
    }
    maven { url = 'https://maven.blamejared.com/' }

    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
    // The following line declares the mojmap mappings, you may use other mappings as well
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.20.1:2023.09.03@zip")
    }
    // The following line declares the yarn mappings you may select this one as well.
    // mappings "net.fabricmc:yarn:@YARN_MAPPINGS@:v2"

    forge "net.minecraftforge:forge:$forge_version"

    modImplementation("team.lodestar.lodestone:lodestone:${minecraft_version}-${lodestone_version}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

remapJar {
    archiveClassifier.set(null)
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release.set(17)
}

java {
    withSourcesJar()
}

jar {
    archiveClassifier.set("dev")
}

components.java {
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        maven {
            name "GitHubPackages"
            url "https://maven.pkg.github.com/Ultreon/ControllerX"

            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
}